---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: synch_notprod_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: DEV_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: DEV_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: production
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: synch_prod_secrets
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/cop-secrets
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: PRODUCTION_DRONE_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: PRODUCTION_DRONE_AWS_SECRET_ACCESS_KEY
    DEPLOY_ENV: production
    DRONE_SERVER: https://drone-gh.acp.homeoffice.gov.uk
    DRONE_TOKEN:
      from_secret: DRONE_V1_PUBLIC_TOKEN
    DRONE_VERSION: ${DRONE_SYSTEM_VERSION}
  when:
    event:
    - promote
    target:
    - secrets

- name: open-snow-change-mock
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  environment:
    SNOW_ENDPOINT: https://cto-change-dev.internal.cto-notprod.homeoffice.gov.uk/create
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_TEST_PASS:
      from_secret: SNOW_TEST_PASS
    SNOW_TEST_USER: ctodashboard-ci
  when:
    event:
    - promote
    target:
    - open-mock

- name: complete-snow-change-mock
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: success
  environment:
    SNOW_ENDPOINT: https://cto-change-dev.internal.cto-notprod.homeoffice.gov.uk/update
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_TEST_PASS:
      from_secret: SNOW_TEST_PASS
    SNOW_TEST_USER: ctodashboard-ci
  when:
    event:
    - promote
    target:
    - complete-mock

- name: cancel-snow-change-mock
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: fail
  environment:
    SNOW_ENDPOINT: https://cto-change-dev.internal.cto-notprod.homeoffice.gov.uk/update
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_TEST_PASS:
      from_secret: SNOW_TEST_PASS
    SNOW_TEST_USER: ctodashboard-ci
  when:
    event:
    - promote
    target:
    - cancel-mock

- name: open-snow-change-training
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  environment:
    SNOW_DESC: ${DRONE_COMMIT_MESSAGE}
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: deployment
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
    SNOW_TITLE: ${DRONE_REPO}:${DRONE_COMMIT_SHA}
  when:
    event:
    - promote
    target:
    - open-training

- name: complete-snow-change-notprod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: success
  environment:
    SNOW_DESC: "\"Completed successfully\""
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: update
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    target:
    - complete-training

- name: cancel-snow-change-notprod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: fail
  environment:
    SNOW_DESC: "\"Deployment failed\""
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: update
    SNOW_TEST_PASS:
      from_secret: DEV_SERVICE_NOW_PASSWORD
    SNOW_TEST_USER:
      from_secret: DEV_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    target:
    - cancel-training

- name: open-snow-change-prod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  environment:
    SNOW_DESC: ${DRONE_COMMIT_MESSAGE}
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: deployment
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
    SNOW_TITLE: ${DRONE_REPO}:${DRONE_COMMIT_SHA}
  when:
    event:
    - promote
    target:
    - open

- name: complete-snow-change-prod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: success
  environment:
    SNOW_DESC: "\"Completed successfully\""
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: update
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    target:
    - complete

- name: cancel-snow-change-prod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/snowtify:latest
  settings:
    deployment_outcome: fail
  environment:
    SNOW_DESC: "\"Deployment failed\""
    SNOW_EXTERNAL_ID: COP
    SNOW_INT_ID_FILE: /drone/src/internal-id
    SNOW_NOTIFICATION_TYPE: update
    SNOW_PROD_PASS:
      from_secret: PRODUCTION_SERVICE_NOW_PASSWORD
    SNOW_PROD_USER:
      from_secret: PRODUCTION_SERVICE_NOW_USERNAME
  when:
    event:
    - promote
    target:
    - cancel

- name: notify
  pull: if-not-exists
  image: plugins/slack
  settings:
    channel: cop-deployments
    template: "{{#build.deployTo}}\n  *{{repo.name}} - Build {{build.number}} - {{uppercasefirst build.deployTo}} - {{uppercase build.status}}*\n{{else}}\n  *{{repo.name}} - Build {{build.number}} - Development - {{uppercase build.status}}*\n{{/build.deployTo}} {{build.link}}\n"
    username: Drone Build Watcher
  environment:
    SLACK_WEBHOOK:
      from_secret: SLACK_WEBHOOK
  when:
    event:
    - promote
    status:
    - success
    - failure

...
